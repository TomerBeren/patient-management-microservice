version: "3.8"

services:
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    environment:
      KAFKA_CFG_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094"
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: "CONTROLLER"
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "0@kafka:9093"
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: "CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT"
      KAFKA_CFG_LISTENERS: "PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094"
      KAFKA_CFG_NODE_ID: "0"
      KAFKA_CFG_PROCESS_ROLES: "controller,broker"
    ports:
      - "9092:9092"
      - "9094:9094"
    networks:
      - internal

  patient-service-db:
    image: postgres:latest
    container_name: patient-service-db
    environment:
      POSTGRES_USER: "admin_user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "db"
    ports:
      - "5001:5432"
    volumes:
      - ./db_volumes/patient-service-db:/var/lib/postgresql/data
    networks:
      - internal

  auth-service-db:
    image: postgres:latest
    container_name: auth-service-db
    environment:
      POSTGRES_USER: "admin_user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "db"
    ports:
      - "5002:5432"
    volumes:
      - ./db_volumes/auth-service-db:/var/lib/postgresql/data
    networks:
      - internal

  billing-service:
    build:
      context: ./billing-service
      dockerfile: Dockerfile
    image: billing-service:latest
    container_name: billing-service
    ports:
      - "4001:4001"
      - "9001:9001"
    networks:
      - internal

  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    image: analytics-service:latest
    container_name: analytics-service
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
    ports:
      - "4002:4002"
    depends_on:
      - kafka
    networks:
      - internal

  patient-service:
    build:
      context: ./patient-service
      dockerfile: Dockerfile
    image: patient-service:latest
    container_name: patient-service
    environment:
      BILLING_SERVICE_ADDRESS: "billing-service"
      BILLING_SERVICE_GRPC_PORT: "9001"
      SPRING_DATASOURCE_PASSWORD: "password"
      SPRING_DATASOURCE_URL: "jdbc:postgresql://patient-service-db:5432/db"
      SPRING_DATASOURCE_USERNAME: "admin_user"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
      SPRING_SQL_INIT_MODE: "always"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
    depends_on:
      - patient-service-db
      - billing-service
      - kafka
    networks:
      - internal

  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: api-gateway:latest
    container_name: api-gateway
    ports:
      - "4004:4004"
    depends_on:
      - patient-service
    networks:
      - internal

networks:
  internal:
    driver: bridge
